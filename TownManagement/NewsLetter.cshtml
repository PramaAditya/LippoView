@model Lippo.Models.NewsLetterModel
      <!-- Alternative Blog content section -->
		<section class="hg_section ptop-50">
			<div class="container">
				<div class="row">
					<div class="col-md-12 col-sm-12">
						<div class="zn_blog_archive_element">
							<div class="itemListView clearfix eBlog">
								<div class="itemList zn_blog_columns">
                                    @foreach(var item in Model.itemList) {
									<!-- Blog item 1 -->
									<div class="col-sm-6 col-lg-4 blog-isotope-item" style="width: 507px">
										<div class="itemContainer zn_columns zn_columns3">
											<!-- Post thumbnail -->
											<div class="itemThumbnail">
												<!-- Image -->
												<a href="@Url.Content("~/TownManagement/NewsLetterDetail/" + item.rowId)">
													<img width="760" height="508" src="@Url.Content("~/PImages/" + item.imageUrl)" class="wp - post - image" alt="blog09">

     </a>
												<!--/ Image -->

												<!-- Overlay + Read more button -->
												<div class="overlay">
													<div class="overlay__inner">
														<a href="@Url.Content("~/TownManagement/NewsLetterDetail/" + item.rowId)" class="readMore" title="" data-readmore="Read More"></a>
													</div>
												</div>
												<!--/ Overlay + Read more button -->
											</div>
											<!--/ Post thumbnail -->

											<!-- Post header -->
											<div class="itemHeader">
												<!-- Post title -->
												<h3 class="itemTitle">
													<a href="@Url.Content("~/TownManagement/NewsLetterDetail/" + item.rowId)">@item.title</a>
												</h3>
												<!--/ Post title -->

												<!-- Post details -->
												<div class="post_details">
													<span class="catItemDateCreated"><span class="glyphicon glyphicon-calendar"></span> @item.date.ToString("dddd, dd MMMM yyyy")</span>
													<span class="catItemAuthor">by <a href="#" title="Posts by danut" rel="author">@item.author</a></span>
												</div>
												<!--/ Post details -->
											</div>
											<!--/ Post header -->

											<!-- Post content body -->
											<div class="itemBody">
												<!-- Intro text -->
												<div class="itemIntroText" style="height: 80px; overflow: hidden;">
													<p>
                                                        @item.shortDesc  
													</p>
												</div>
												<!--/ Intro text -->
												<div class="clear">
												</div>
											</div>
											<!--/ Post content body -->
											<div class="clear">
											</div>
										</div>
										<!--/ Blog item container -->
									</div>
									<!--/ Blog item 1 -->
                                    }
								</div>
                                                            <!-- Pagination -->
							
							<!--/ Pagination -->
								<!--/ .itemList -->
							</div>

                            @{
                                // Assuming ViewBag.currentPage and ViewBag.totalPage are set as numbers but not necessarily integers.
                                // Use Convert.ToInt32 to safely convert them to integers.
                                int currentPage = Convert.ToInt32(ViewBag.currentPage); // Convert currentPage to integer.
                                int totalPage = Convert.ToInt32(ViewBag.totalPage); // Convert totalPage to integer.
                                int range = 5; // Number of pages to display in the pagination.

                                // Calculate the start and end range for page numbers.
                                // Math.Max and Math.Min will return an integer if both arguments are integers.
                                int startRange = Math.Max(1, currentPage - 2); // Starting page number in the pagination.
                                int endRange = Math.Min(totalPage, currentPage + 2); // Ending page number in the pagination.

                                // Adjust the ranges to avoid overlap with static first and last page links.
                                if (currentPage <= 4)
                                {
                                    // If close to the start, extend the start range and reduce the end range.
                                    startRange = 1;
                                    endRange = Math.Min(totalPage, 5); // Show the first five pages.
                                }
                                else if (currentPage >= totalPage - 3)
                                {
                                    // If close to the end, reduce the start range and extend the end range.
                                    startRange = Math.Max(1, totalPage - 4); // Show the last five pages.
                                    endRange = totalPage;
                                }
                            }
                            <ul class="pagination">
                                <!-- First and Previous Page Links -->
                                <li class="pagination-first @(currentPage == 1 ? "disabled" : "")">
                                    <a href="@Url.Content("~/TownManagement/NewsLetter/1")">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M18.4099 7.41L16.9999 6L10.9999 12L16.9999 18L18.4099 16.59L13.8299 12L18.4099 7.41ZM12.4099 7.41L10.9999 6L4.99991 12L10.9999 18L12.4099 16.59L7.82991 12L12.4099 7.41Z" fill="currentColor" />
                                        </svg>
                                    </a>
                                </li>
                                <li class="pagination-prev @(currentPage == 1 ? "disabled" : "")">
                                    <a href="@Url.Content("~/TownManagement/NewsLetter/" + (int)Math.Max(1, currentPage - 1))">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M13.9999 6L15.4099 7.41L10.8299 12L15.4099 16.59L13.9999 18L7.99991 12L13.9999 6Z" fill="currentColor" />
                                        </svg>

                                    </a>
                                </li>

                                <!-- Page Number Links -->
                                @if (currentPage > totalPage - 4)
                                {
        <!-- Show the first three pages if not close to start -->
                                    <li><a href="@Url.Content("~/TownManagement/NewsLetter/1")">1</a></li>
                                    <li><a href="@Url.Content("~/TownManagement/NewsLetter/2")">2</a></li>
                                    <li><a href="@Url.Content("~/TownManagement/NewsLetter/3")">3</a></li>
                                    <li class="disabled"><span>...</span></li>

                                }

                                @for (int pageNo = startRange; pageNo <= endRange; pageNo++)
                                {
                                    <li class="@(currentPage == pageNo ? "active" : "")">
                                        @if (currentPage == pageNo)
                                        {
                                            <span>@pageNo</span>
                                        }
                                        else
                                        {
                                            <a href="@Url.Content("~/TownManagement/NewsLetter/" + pageNo)">
                                                <span>@pageNo</span>
                                            </a>
                                        }
                                    </li>
                                }

                                @if (currentPage < totalPage - 4)
                                {
        <!-- Show ellipsis and last three pages if not close to end -->
                                    <li class="disabled"><span>...</span></li>
                                    <li><a href="@Url.Content("~/TownManagement/NewsLetter/" + (totalPage - 2))">@(totalPage - 2)</a></li>
                                    <li><a href="@Url.Content("~/TownManagement/NewsLetter/" + (totalPage - 1))">@(totalPage - 1)</a></li>
                                    <li><a href="@Url.Content("~/TownManagement/NewsLetter/" + totalPage)">@totalPage</a></li>
                                }

                                <!-- Next and Last Page Links -->
                                <li class="pagination-next @(currentPage == totalPage ? "disabled" : "")">
                                    <a href="@Url.Content("~/TownManagement/NewsLetter/" + (int)Math.Min(totalPage, currentPage + 1))">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M10.0001 6L8.59009 7.41L13.1701 12L8.59009 16.59L10.0001 18L16.0001 12L10.0001 6Z" fill="currentColor" />
                                        </svg>
                                    </a>
                                </li>
                                <li class="pagination-last @(currentPage == totalPage ? "disabled" : "")">
                                    <a href="@Url.Content("~/TownManagement/NewsLetter/" + totalPage)">
                                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M5.59009 7.41L7.00009 6L13.0001 12L7.00009 18L5.59009 16.59L10.1701 12L5.59009 7.41ZM11.5901 7.41L13.0001 6L19.0001 12L13.0001 18L11.5901 16.59L16.1701 12L11.5901 7.41Z" fill="currentColor" />
                                        </svg>
                                    </a>
                                </li>
                            </ul>
                            <style>
                                .pagination-first.disabled a,
                                .pagination-last.disabled a,
                                .pagination-next.disabled a,
                                .pagination-prev.disabled a {
                                    pointer-events: none; /* Disables click events */
                                    color: #ccc; /* Gray out the icon */
                                }
                                .pagination-first a,
                                .pagination-last a,
                                .pagination-next a,
                                .pagination-prev a,
                                .pagination {
                                    display: flex !important;
                                    justify-content: center;
                                    align-items: center;
                                }

                                .pagination .active span{


 
                                        /* Auto layout */
 
                                        background: #00BD13;
                                        border-radius: 2px;
                                        border-width: 0px;
                                        display: flex;
                                        align-items: center;
                                        justify-content: center;

                                        color: #FAFAFA !important;
  
                                    }

                                .pagination li:first-child {
                                    margin-right: 0px !important;
                                }

                                .pagination li:last-child {
                                    margin-left: 0px !important;
                                }
                            </style>
							<!--/ .itemListView -->
						</div>
						<!--/ .zn_blog_archive_element -->
					</div>
					<!--/ col-md-12 col-sm-12 -->
				</div>
				<!--/ row -->
			</div>
			<!--/ container -->
		</section>
		<!--/ Alternative Blog content section -->